# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
data = pd.read_csv('football_matches.csv')

# Inspect the dataset
print("First few rows of the dataset:")
print(data.head())

print("\nSummary of the dataset:")
print(data.describe(include='all'))

print("\nInfo about the dataset:")
print(data.info())

# Clean the dataset
# Check for missing values
missing_values = data.isnull().sum()
print("\nMissing values in each column:")
print(missing_values)

# Drop columns with a high percentage of missing values or irrelevant columns
# Example: data = data.drop(columns=['column_name'])

# Fill missing values if necessary
# Example: data['column_name'] = data['column_name'].fillna(data['column_name'].median())

# Data type conversion if necessary
# Example: Convert date columns to datetime
data['date'] = pd.to_datetime(data['date'])

# Analyze data types
print("\nData types after conversion:")
print(data.dtypes)

# Univariate Analysis
# Distribution of numerical features (e.g., scores)
plt.figure(figsize=(10, 6))
sns.histplot(data['home_team_score'], kde=True, bins=30)
plt.title('Distribution of Home Team Scores')
plt.xlabel('Home Team Score')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(data['away_team_score'], kde=True, bins=30)
plt.title('Distribution of Away Team Scores')
plt.xlabel('Away Team Score')
plt.ylabel('Frequency')
plt.show()

# Distribution of categorical features (e.g., teams)
plt.figure(figsize=(12, 6))
sns.countplot(y='home_team', data=data, order=data['home_team'].value_counts().iloc[:10].index)
plt.title('Top 10 Home Teams by Number of Matches')
plt.xlabel('Number of Matches')
plt.ylabel('Home Team')
plt.show()

plt.figure(figsize=(12, 6))
sns.countplot(y='away_team', data=data, order=data['away_team'].value_counts().iloc[:10].index)
plt.title('Top 10 Away Teams by Number of Matches')
plt.xlabel('Number of Matches')
plt.ylabel('Away Team')
plt.show()

# Bivariate Analysis
# Home Team Score vs Away Team Score
plt.figure(figsize=(10, 6))
sns.scatterplot(x='home_team_score', y='away_team_score', data=data)
plt.title('Home Team Score vs Away Team Score')
plt.xlabel('Home Team Score')
plt.ylabel('Away Team Score')
plt.show()

# Home Team vs Home Team Score
plt.figure(figsize=(12, 6))
sns.boxplot(x='home_team_score', y='home_team', data=data, order=data['home_team'].value_counts().iloc[:10].index)
plt.title('Home Team vs Home Team Score')
plt.xlabel('Home Team Score')
plt.ylabel('Home Team')
plt.show()

# Multivariate Analysis
# Correlation Matrix
plt.figure(figsize=(10, 8))
corr_matrix = data[['home_team_score', 'away_team_score']].corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Matrix')
plt.show()

# Time Series Analysis
# Number of Matches Over Time
data['year'] = data['date'].dt.year
matches_per_year = data.groupby('year').size().reset_index(name='counts')

plt.figure(figsize=(14, 7))
sns.lineplot(x='year', y='counts', data=matches_per_year)
plt.title('Number of Matches Over Time')
plt.xlabel('Year')
plt.ylabel('Number of Matches')
plt.xticks(rotation=45)
plt.show()

# Insights
print("\nTop 5 home teams by number of matches:")
print(data['home_team'].value_counts().head(5))

print("\nTop 5 away teams by number of matches:")
print(data['away_team'].value_counts().head(5))

print("\nAverage home team score:")
print(data['home_team_score'].mean())

print("\nAverage away team score:")
print(data['away_team_score'].mean())
